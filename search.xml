<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>变量与常量</title>
      <link href="/2022/01/28/bian-liang-yu-chang-liang/"/>
      <url>/2022/01/28/bian-liang-yu-chang-liang/</url>
      
        <content type="html"><![CDATA[<h1 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="类变量"><a href="#类变量" class="headerlink" title="类变量"></a>类变量</h3><p>用static关键字修饰，在类里面，main函数外部，在同一个类中的其他方法也可以使用这个常量。</p><p><strong>如果一个常量被声明为public，那么其他类的方法也可以使用这个常量</strong></p><h3 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h3><p>从属于对象，不需要初始化，不初始化默认值为 0或0.0</p><p><strong>布尔值</strong>：默认值为<strong>false</strong></p><p><strong>除了基本类型，其他类型初始值都为null</strong></p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>是指在main函数里面的变量，<strong>必须声明和初始化量</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//局部变量：必须声明和初始化量</span>        <span class="token comment">//变量类型 变量名= new javaBase.demo6()</span>        demo6 demo6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">demo6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>demo6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从java10开始，对于局部变量，如果可以从变量的初始值推断出它的类型，就不需要再声明类型 。只需要使用关键字<em><strong>var</strong></em>而无需指定类型：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">var</span> greeting <span class="token operator">=</span> <span class="token string">"Hello"</span><span class="token punctuation">;</span><span class="token comment">//greeting is a String</span><span class="token keyword">var</span> vacationDays <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span><span class="token comment">//vacationDays is a int</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>使用final关键字指示常量</p><p><strong>final关键字表示这个变量只能被赋值一次。一旦赋值以后就不能被更改了。习惯上，常量名通常使用大写</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">double</span> CM_PER_INCH <span class="token operator">=</span> <span class="token number">2.54</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
            <tag> 变量 </tag>
            
            <tag> 常量 </tag>
            
            <tag> 局部变量 </tag>
            
            <tag> 类变量 </tag>
            
            <tag> Boolean值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java数据类型</title>
      <link href="/2022/01/24/shu-ju-lei-xing/"/>
      <url>/2022/01/24/shu-ju-lei-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>java一共有八大基本类型，四种整型，两种浮点型，一种字符类型char（用于表示Unicode编码的代码单元），一种表示真值的Boolean类型</p><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><p>用于表示没有小数部分的数值，可以为负数</p><table><thead><tr><th align="center">类型</th><th align="center">存储需求</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">int</td><td align="center">4字节</td><td align="center">-2147483648~2147483647（超过20亿）</td></tr><tr><td align="center">short</td><td align="center">2字节</td><td align="center">-32768~32767</td></tr><tr><td align="center">long</td><td align="center">8字节</td><td align="center"></td></tr><tr><td align="center">byte</td><td align="center">1字节</td><td align="center">-128~127</td></tr></tbody></table><p>long整型有后缀l或L</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> i4 <span class="token operator">=</span> <span class="token number">010</span><span class="token punctuation">;</span><span class="token comment">//八进制中的8，八进制前缀为0</span><span class="token keyword">int</span> i5 <span class="token operator">=</span> <span class="token number">0b0111</span><span class="token punctuation">;</span><span class="token comment">//二进制前缀为0b或0B</span><span class="token keyword">int</span> i6 <span class="token operator">=</span> <span class="token number">0x11</span><span class="token punctuation">;</span><span class="token comment">//0x或0X为十六进制</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i6<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p>用于表示有小数部分的数值</p><table><thead><tr><th align="center">类型</th><th align="center">存储需求</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">float</td><td align="center">4字节</td><td align="center"></td></tr><tr><td align="center">double</td><td align="center">8字节</td><td align="center"></td></tr></tbody></table><p>float类型的数值后有后缀f或F，没有后缀的浮点数值总是默认为double类型（如3.14）</p><p>double类型的数值也可以加后缀d或D，精度是float型的<strong>两倍</strong></p><p><em><strong>浮点型不适用于无法接受舍入误差的金融计算</strong></em></p><h3 id="字符型char型"><a href="#字符型char型" class="headerlink" title="字符型char型"></a>字符型char型</h3><p>\t 制表符 Tab</p><p>\n 换行符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">char</span> c1 <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">char</span> c2 <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//强制转换类型为整数型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="检测字符串是否相等"><a href="#检测字符串是否相等" class="headerlink" title="检测字符串是否相等"></a>检测字符串是否相等</h4><p>可以用equals 方法检测，例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token string">"Hello"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检测两个字符串是否相等，不分大小写，可以用<strong>equalIgnoreCase</strong>方法来检测，例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token string">"Hello"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意！！不能用==运算符来检测字符串是否相等，它只能确定两个字符串是否存放在同一个位置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">0.1f</span><span class="token punctuation">;</span><span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">0.1d</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d <span class="token operator">==</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span><span class="token keyword">float</span> a1 <span class="token operator">=</span> <span class="token number">56456456f</span><span class="token punctuation">;</span><span class="token keyword">float</span> a2 <span class="token operator">=</span> a1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a1 <span class="token operator">==</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Boolean类型"><a href="#Boolean类型" class="headerlink" title="Boolean类型"></a>Boolean类型</h2><p>只有false和true两个值，用来判断逻辑条件，整形值和布尔值之间不能相互转换</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
            <tag> java基础 </tag>
            
            <tag> 整型 </tag>
            
            <tag> 浮点型 </tag>
            
            <tag> char型 </tag>
            
            <tag> Boolean型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>url</title>
      <link href="/2021/12/31/url-bi-ji/"/>
      <url>/2021/12/31/url-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>url：统一资源定位器(Uniform Resource Locator)</p><p>就像每家每户都有一个门牌地址一样，每个网页也都有一个Internet地址。.当你在浏览器的地址框中输入一个URL或是单击一个超级链接时，URL就确定了要浏览的地址。. 浏览器通过超文本传输协议 (HTTP)，将Web服务器上站点的网页代码提取出来，并翻译成漂亮的网页。</p>]]></content>
      
      
      
        <tags>
            
            <tag> url </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 常用命令</title>
      <link href="/2021/12/30/hexo-chang-yong-ming-ling/"/>
      <url>/2021/12/30/hexo-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #部署到GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看Hexo的版本</p><h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy</p><h3 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h3><p>hexo s -g #生成并本地预览<br>hexo d -g #生成并上传</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片</title>
      <link href="/2021/12/30/photo/"/>
      <url>/2021/12/30/photo/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/xhz.jpg" alt="小猴子"></p>]]></content>
      
      
      
        <tags>
            
            <tag> animal </tag>
            
            <tag> cute </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
